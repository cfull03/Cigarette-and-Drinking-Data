# File: pyproject.toml
# Notes:
# - Keeps your existing metadata and adds MLOps/dev tooling.
# - Aligns versions with your pre-commit (ruff 0.12.11, black 25.1.0) and nbqa hooks.
# - Centralizes ruff/black/pytest/mypy config so CI & local match.

[build-system]
requires = ["setuptools>=68", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "addiction-ds"
version = "0.1.0"
description = "Professional solo data-science project for addiction dataset"
readme = "README.md"
requires-python = ">=3.10"
authors = [{ name = "Christian Fullerton" }]
license = { text = "MIT" }
keywords = ["data-science", "reproducibility", "solo"]
classifiers = [
  "Programming Language :: Python :: 3",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
]
# Core runtime deps (keep lean for library usage); training/serving deps live in [project.optional-dependencies].
dependencies = [
  "pandas>=2.1",
  "pyyaml>=6.0",
  "numpy>=1.26",
]

[project.optional-dependencies]
# Dev + MLOps stack used by hooks, CI, training scripts, and API.
dev = [
  # Formatting/Linting (align with pre-commit hooks)
  "ruff==0.12.11",
  "black==25.1.0",
  "nbqa==1.8.7",
  "nbstripout==0.7.1",
  # Testing/typing
  "pytest>=8",
  "pytest-cov>=4",
  "mypy>=1.10",
  "types-PyYAML",
  # ML & serving
  "scikit-learn>=1.5",
  "joblib>=1.3",
  "mlflow>=2.14",
  "fastapi>=0.112",
  "uvicorn>=0.30",
  # Utilities
  "ipykernel>=6.29",
  "python-dotenv>=1.0",
  "rich>=13",
]

[project.scripts]
ad-validate = "addiction_ds.validate:cli"

[tool.setuptools]
package-dir = { "" = "src" }

[tool.setuptools.packages.find]
where = ["src"]
include = ["addiction_ds*"]

[tool.black]
line-length = 100

[tool.ruff]
line-length = 100
select = ["E", "F", "I", "UP", "B"]
ignore = ["E501"]
# Match project Python requirement to improve rule selection
# (ruff uses this to know which syntax is allowed)
target-version = "py310"

[tool.mypy]
python_version = "3.10"
warn_unused_configs = true
warn_return_any = true
warn_unused_ignores = true
ignore_missing_imports = true
pretty = true
# Limit type-checking to our source tree by default
files = ["src"]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q"
pythonpath = ["src"]
testpaths = ["test"]

[tool.coverage.run]
branch = true
source = ["src"]

[tool.coverage.report]
show_missing = true
skip_covered = true

# Optional: configure nbqa to inherit line length and ruff rules when run outside pre-commit
[tool.nbqa.addopts]
black = ["--line-length=100"]
ruff = ["--select=E,F,I,UP,B", "--ignore=E501"]
